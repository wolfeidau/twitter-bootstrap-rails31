// VARIABLES
// ---------

// Accent Colors
$blue:              #049CDB;
$blueDark:          #0064CD;
$green:             #46a546;
$red:               #9d261d;
$yellow:            #ffc40d;
$orange:            #f89406;
$pink:              #c3325f;
$purple:            #7a43b6;

// Links
$linkColor:         #0069d6;
$linkColorHover:    darken($linkColor, 10);

// Grays
$black:             #000;
$grayDark:          lighten($black, 25%);
$gray:              lighten($black, 50%);
$grayLight:         lighten($black, 75%);
$grayLighter:       lighten($black, 90%);
$white:             #fff;


// Baseline grid
$basefont:          13px;
$baseline:          18px;

// Griditude
$gridColumns:       16;
$gridColumnWidth:   40px;
$gridGutterWidth:   20px;
$siteWidth:         ($gridColumns * $gridColumnWidth) + ($gridGutterWidth * ($gridColumns - 1));

// Color Scheme
$baseColor:         $blue;                  // Set a base color
$complement:        adjust-hue($baseColor, 180deg);  // Determine a complementary color
$split1:            adjust-hue($baseColor, 158deg);  // Split complements
$split2:            adjust-hue($baseColor, 0158deg);
$triad1:            adjust-hue($baseColor, 135deg);  // Triads colors
$triad2:            adjust-hue($baseColor, 0135deg);
$tetra1:            adjust-hue($baseColor, 90deg);   // Tetra colors
$tetra2:            adjust-hue($baseColor, 090deg);
$analog1:           adjust-hue($baseColor, 22deg);   // Analogs colors
$analog2:           adjust-hue($baseColor, 022deg);

// MIXINS
// ------

// Clearfix for clearing floats like a boss h5bp.com/q
@mixin clearfix {
  zoom: 1;
    &:before, &:after {
    display: table;
    content: "";
    }
    &:after {
    clear: both;
    }
}

// Center-align a block level element
@mixin center-block {
    display: block;
    margin: 0 auto;
}

// Sizing shortcuts
@mixin size($height: 5px, $width: 5px) {
    height: $height;
    width: $width;
}
@mixin square($size: 5px) {
    @include size($size, $size);
}

// Input placeholder text
@mixin placeholder($color: $grayLight) {
  :-moz-placeholder {
    color: $color;
  }
  ::-webkit-input-placeholder {
    color: $color;
  }
}

// Font Stacks
@mixin font($weight: normal, $size: 14px, $lineHeight: 20px) {
    font-size: $size;
    font-weight: $weight;
    line-height: $lineHeight;
}

@mixin shorthand($weight: normal, $size: 14px, $lineHeight: 20px) {
    @include font($weight, $size, $lineHeight);
}

@mixin sans-serif($weight: normal, $size: 14px, $lineHeight: 20px) {
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    @include font($weight, $size, $lineHeight);
}

@mixin serif($weight: normal, $size: 14px, $lineHeight: 20px) {
    font-family: "Georgia", Times New Roman, Times, serif;
    @include font($weight, $size, $lineHeight);
}

@mixin monospace($weight: normal, $size: 12px, $lineHeight: 20px) {
    font-family: "Monaco", Courier New, monospace;
    @include font($weight, $size, $lineHeight);
}

// Grid System
@mixin container {
    width: $siteWidth;
    margin: 0 auto;
    @include clearfix();
}

@mixin columns($columnSpan: 1) {
  float: left;
  width: ($gridColumnWidth * $columnSpan) + ($gridGutterWidth * ($columnSpan - 1));
  margin-left: $gridGutterWidth;
  &:first-child {
    margin-left: 0;
  }
}

// todo Could be replaced with a function?
@mixin offsetMath($extraSpace: 40px, $columnOffset: 1) {
  margin-left: ($gridColumnWidth * $columnOffset) + ($gridGutterWidth * ($columnOffset - 1)) + $extraSpace !important;
}

@mixin offset($columnOffset: 1){
    @include offsetMath(40px, $columnOffset);
    &:first-child {
        @include offsetMath(20px, $columnOffset);
    }
}

// Border Radius
@mixin border-radius($radius: 5px) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

// Drop shadows
@mixin box-shadow($shadow: 0 1px 3px rgba(0,0,0,.25)) {
  -webkit-box-shadow: $shadow;
  -moz-box-shadow: $shadow;
  box-shadow: $shadow;
}

// Transitions
@mixin transition($transition) {
    -webkit-transition: $transition;
    -moz-transition: $transition;
    transition: $transition;
}

// Background clipping
@mixin background-clip($clip) {
    -webkit-background-clip: $clip;
    -moz-background-clip: $clip;
    background-clip: $clip;
}

// CSS3 Content Columns
@mixin content-columns($columnCount, $columnGap: 20px) {
    -webkit-column-count: $columnCount;
    -webkit-column-gap: $columnGap;
    -moz-column-count: $columnCount;
    -moz-column-gap: $columnGap;
    column-count: $columnCount;
    column-gap: $columnGap;
}



